import { useState } from "react";
import { Card, CardContent } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from "recharts";

const shiftData = {
  ‡πÄ‡∏ä‡πâ‡∏≤: {
    nurse: "‡∏ß‡∏¥‡∏†‡∏≤ ‡∏Å‡∏≤‡∏ç‡∏à‡∏ô‡πå",
    tasksDone: 5,
    tasksPending: ["‡πÉ‡∏´‡πâ‡∏¢‡∏≤ 502", "‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ä‡∏µ‡∏û‡∏à‡∏£ 504"],
  },
  ‡∏ö‡πà‡∏≤‡∏¢: {
    nurse: "‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå ‡∏°‡∏≤‡∏ô‡∏∞",
    tasksDone: 3,
    tasksPending: ["‡∏ï‡∏£‡∏ß‡∏à‡∏ß‡∏±‡∏î‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥ 505"],
  },
  ‡∏î‡∏∂‡∏Å: {
    nurse: "‡∏à‡∏≤‡∏£‡∏∏‡∏ß‡∏£‡∏£‡∏ì ‡∏≠‡∏≤‡∏£‡∏µ",
    tasksDone: 2,
    tasksPending: [],
  },
};

const chartData = Object.entries(shiftData).map(([shift, data]) => ({
  shift,
  tasksDone: data.tasksDone,
}));

export default function ShiftSummary() {
  const [handoverNote, setHandoverNote] = useState("");
  const [submitted, setSubmitted] = useState(false);

  const handleSubmit = () => {
    if (handoverNote.trim()) {
      setSubmitted(true);
    }
  };

  return (
    <div className="p-6 space-y-6">
      <h1 className="text-2xl font-bold">‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏∞‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏• (Shift Summary)</h1>

      {/* ‡∏Å‡∏£‡∏≤‡∏ü‡∏á‡∏≤‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Å‡∏∞ */}
      <Card>
        <CardContent>
          <h2 className="text-lg font-semibold mb-4">üìä ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Å‡∏∞</h2>
          <ResponsiveContainer width="100%" height={250}>
            <BarChart data={chartData}>
              <CartesianGrid strokeDasharray="3 3" />
              <XAxis dataKey="shift" />
              <YAxis allowDecimals={false} />
              <Tooltip />
              <Bar dataKey="tasksDone" fill="#4f46e5" />
            </BarChart>
          </ResponsiveContainer>
        </CardContent>
      </Card>

      <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
        {Object.entries(shiftData).map(([shift, data]) => (
          <Card key={shift}>
            <CardContent className="space-y-2">
              <h2 className="text-lg font-semibold">üïí ‡∏Å‡∏∞{shift}</h2>
              <p>üë©‚Äç‚öïÔ∏è ‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•: {data.nurse}</p>
              <p>
                üìä ‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡πÅ‡∏•‡πâ‡∏ß: <strong>{data.tasksDone}</strong>
              </p>
              <div>
                ‚úÖ ‡∏á‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡∏á:
                {data.tasksPending.length > 0 ? (
                  <ul className="list-disc ml-5 text-sm text-red-600">
                    {data.tasksPending.map((task, i) => (
                      <li key={i}>{task}</li>
                    ))}
                  </ul>
                ) : (
                  <p className="text-green-700">‡πÑ‡∏°‡πà‡∏°‡∏µ</p>
                )}
              </div>
            </CardContent>
          </Card>
        ))}
      </div>

      <Card>
        <CardContent className="space-y-3">
          <h2 className="text-lg font-semibold">üìù ‡∏™‡πà‡∏á‡∏ï‡πà‡∏≠‡πÄ‡∏ß‡∏£‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏</h2>
          <textarea
            className="w-full p-2 border rounded-md"
            rows={4}
            placeholder="‡∏û‡∏¥‡∏°‡∏û‡πå‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏ï‡πà‡∏≠‡πÄ‡∏ß‡∏£..."
            value={handoverNote}
            onChange={(e) => setHandoverNote(e.target.value)}
          ></textarea>
          <button
            className="px-4 py-2 bg-blue-600 text-white rounded-xl"
            onClick={handleSubmit}
          >
            ‡∏™‡πà‡∏á‡∏ï‡πà‡∏≠‡πÄ‡∏ß‡∏£
          </button>
          {submitted && (
            <p className="text-green-600 font-semibold">‚úÖ ‡∏™‡πà‡∏á‡∏ï‡πà‡∏≠‡πÄ‡∏ß‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß</p>
          )}
        </CardContent>
      </Card>
    </div>
  );
}
